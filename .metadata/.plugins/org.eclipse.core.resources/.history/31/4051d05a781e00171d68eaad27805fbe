package uoa.compsys302.project;

import java.util.ArrayList;

import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.image.Image;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.Border;
import javafx.scene.paint.Color;
import javafx.scene.paint.ImagePattern;
import javafx.scene.text.Font;

public class MainMenuController {
	private MasterViewsController masterViewsController;
	private Group root;
	private Scene menuScene;
	private int buttonIndex;
	private ArrayList<Button> buttonList;
	
	public MainMenuController(MasterViewsController masterViewsController){
		this.masterViewsController = masterViewsController;
		buttonIndex = 0;
		buttonList = new ArrayList<Button>();
	}
	
	public Scene initialise(int width, int height) {
		root = new Group();
		Image img = new Image("file:src/Images/start_screen.png");
		
		menuScene = new Scene(root, width, height, new ImagePattern(img));
		
		Button singlePlayerButton = new Button();
		singlePlayerButton.setText("Single Player");
		singlePlayerButton.setLayoutX(362);
		singlePlayerButton.setLayoutY(340);
		singlePlayerButton.setMinWidth(300);
		singlePlayerButton.setMinHeight(50);
		singlePlayerButton.setFont(Font.font("Verdana", 20));
		
		//singlePlayerButton.setOnAction(e -> {       
			//masterViewsController.goToLevelsProgressScene(masterViewsController, 1);
		//});
        singlePlayerButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
            	masterViewsController.goToLevelsProgressScene(masterViewsController, 1);
            }
        });
        singlePlayerButton.setTextFill(Color.TURQUOISE);
        //singlePlayerButton.set
        buttonList.add(singlePlayerButton);
        root.getChildren().add(singlePlayerButton);
        
        Button multiPlayerButton = new Button();
        multiPlayerButton.setText("Multiplayer");
        multiPlayerButton.setLayoutX(362);
        multiPlayerButton.setLayoutY(400);
        multiPlayerButton.setMinWidth(300);
        multiPlayerButton.setMinHeight(50);
        multiPlayerButton.setFont(Font.font("Verdana", 20));
		
        multiPlayerButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
            	//masterViewsController.goToLevelsProgressScene(masterViewsController, 1);
            }
        });
        buttonList.add(multiPlayerButton);
        root.getChildren().add(multiPlayerButton);
        
        Button instructionsButton = new Button();
        instructionsButton.setText("Instructions");
        instructionsButton.setLayoutX(362);
        instructionsButton.setLayoutY(460);
        instructionsButton.setMinWidth(300);
        instructionsButton.setMinHeight(50);
        instructionsButton.setFont(Font.font("Verdana", 20));
		
        instructionsButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
            	//masterViewsController.goToLevelsProgressScene(masterViewsController, 1);
            }
        });
        buttonList.add(instructionsButton);
        root.getChildren().add(instructionsButton);
        
        Button creditsButton = new Button();
        creditsButton.setText("Credits");
        creditsButton.setLayoutX(362);
        creditsButton.setLayoutY(520);
        creditsButton.setMinWidth(300);
        creditsButton.setMinHeight(50);
        creditsButton.setFont(Font.font("Verdana", 20));
		
        creditsButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
            	//masterViewsController.goToLevelsProgressScene(masterViewsController, 1);
            }
        });
        buttonList.add(creditsButton);
        root.getChildren().add(creditsButton);
        
        Button aiButton = new Button();
        aiButton.setText("AI DEMO");
        aiButton.setLayoutX(362);
        aiButton.setLayoutY(580);
        aiButton.setMinWidth(300);
        aiButton.setMinHeight(50);
        aiButton.setFont(Font.font("Verdana", 20));
		
        aiButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
            	//masterViewsController.goToLevelsProgressScene(masterViewsController, 1);
            }
        });
        buttonList.add(aiButton);
        root.getChildren().add(aiButton);
        
        menuScene.setOnKeyPressed(new EventHandler<KeyEvent>() {
		    @Override
		    public void handle(KeyEvent ke) {
		        if (ke.getCode() == KeyCode.UP) {		        	
		        	if(buttonIndex > 0){
		        		buttonIndex = buttonIndex - 1;
		        	}
		        	buttonList.get(buttonIndex).setTextFill(Color.YELLOW);
		        	for (int i=0;i<buttonList.size();i++){
		        		if(i!=buttonIndex){
		        			buttonList.get(i).setTextFill(Color.BLACK);
		        		}
		        	}
		        } else if (ke.getCode() == KeyCode.DOWN) {		        	
		        	if(buttonIndex < (buttonList.size()-1)){
		        		buttonIndex = buttonIndex + 1;
		        	}
		        	buttonList.get(buttonIndex).setTextFill(Color.YELLOW);
		        	for (int i=0;i<buttonList.size();i++){
		        		if(i!=buttonIndex){
		        			buttonList.get(i).setTextFill(Color.BLACK);
		        		}
		        	}							
		        } else if (ke.getCode() == KeyCode.ENTER) {
		        	switch(buttonIndex){
		        	case 0:
		        		masterViewsController.goToLevelsProgressScene(masterViewsController, 1);	
		    			break;
		    		case 1:
		    			masterViewsController.goToMultiplayerSetup(masterViewsController);		
		    			break;
		    		
		    		case 2:
		    			masterViewsController.goToLevelsProgressScene(masterViewsController, 1);		
		    			break;
		    		case 3:
		    			//CREDITS		
		    			break;
		    		case 4:
		    			//AI DEMO
		    			break;	
		    		
		    		default:
		    			break;
		    			
		        	}
		        } 
		    }
		});
		
		return menuScene;
	}

}
